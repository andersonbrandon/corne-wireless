/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define UPPER   2

/ {
    combos {
      compatible = "zmk,combos";

      /**
      * Alternative backspace combo (20, 21)
      */
      combo_bksp {
        timeout-ms = <20>;
        key-positions = <20 21>;
        bindings = <&bspc_del>;
        layers = <0>;
      };

      /**
      * Alternative tab combo (14 s, 15 d)
      */
      l_tab_key {
        timeout-ms = <20>;
        key-positions = <14 15>;
        bindings = <&kp TAB>;
      };
    };

    behaviors {
      td_mt: tap_dance_mod_tap {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_MOD_TAP";
        #binding-cells = <0>;
        tapping-term-ms = <180>;
        bindings = <&lt LOWER LALT>, <&mo UPPER>;
      };

      layer: tap_dance_mod_layer {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_MOD_LAYER";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&mo LOWER>, <&mo UPPER>;
      };

      /**
      * Converts the backspace into a delete if shift or alt is held
      */
      bspc_del: backspace_delete {
        compatible = "zmk,behavior-mod-morph";
        label = "BACKSPACE_DELETE";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_LALT)>;
      };

      /**
      * Converts the escape key into a grave when the GUI key is held
      */
      esc_grave: escape_grave {
        compatible = "zmk,behavior-mod-morph";
        label = "ESCAPE_GRAVE";
        #binding-cells = <0>;
        bindings = <&kp ESC>, <&kp GRAVE>;
        mods = <(MOD_LGUI|MOD_RGUI)>;
        keep-mods = <(MOD_LGUI|MOD_LSFT)>;
      };
    };

    macros {

      /**
      * Starts a copy-to-clipboard screenshot on macos
      */
      ss: screenshot {
        label = "mac_screenshot";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LG(LS(LC(N4)))>;
      }

      /**
      * Window tab left Cmd + Shift + [
      */
      wtl: window_tab_left {
        label = "window_tab_left";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LG(LS(LBKT))>;
      }

      /**
      * Window tab right Cmd + Shift + ]
      */
      wtr: window_tab_right {
        label = "window_tab_right";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LG(LS(RBKT))>;
      }
    }

  keymap {
    compatible = "zmk,keymap";

    default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |     |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  |  ;   |
// | ALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |      |
//                   | SHF | LAY | CMD |   | SPC | ALT  | SHF |

                        label = "Base";
                        bindings = <
   &esc_grave &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &bspc_del
   &none      &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SQT  &kp SEMI
   &kp LALT   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none
                  &kp LSHFT &layer &kp LCMD   &kp SPACE &kp RALT &kp RSHFT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     | Exp |  (  |   |  )  |  7  |  8  |  9  |     | DEL |
// |     |     |     |     |     |  [  |   |  ]  |  4  |  5  |  6  |     |     |
// |     |     |     |     |     |  -  |   |  =  |  1  |  2  |  3  |     |     |
//                   |     |     | SPC |   | ENT |     |  0  |

                        label = "Depths";
                        bindings = <
   &trans &trans &trans &trans &kp LC(UP) &kp LPAR        &kp RPAR  &kp N7  &kp N8 &kp N9 &trans &bspc_del
   &trans &trans &trans &trans &trans     &kp LBKT        &kp RBKT  &kp N4  &kp N5 &kp N6 &trans &trans
   &trans &trans &trans &trans &ss        &kp MINUS       &kp EQUAL &kp N1  &kp N2 &kp N3 &trans &trans
            	          &trans &trans &trans              &kp RET   &kp N0  &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |     |    |  UP |    |    |    |
// | CTRL |     |     |     |     |     |   |     | <- |  DN | -> |    |    |
// | SHFT |     |     |     |     |     |   |     |    |     |    |    |    |
//                    |     |     | GUI |   | SPC |    | ALT |
                        label = "Sky";
                        bindings = <
   &kp TAB   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp C_VOL_UP  &kp C_PREV  &kp UP    &kp C_NEXT &trans       &trans
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp C_VOL_DN  &kp LEFT    &kp DOWN  &kp RIGHT  &trans       &trans
   &kp LSHFT &trans   &trans &trans   &trans   &wtl        &wtr          &none       &none     &none      &kp C_BRI_UP &kp C_BRI_DN
                    	     &trans &trans   &kp LGUI        &kp SPACE &trans  &kp RALT
                        >;
                };
        };
};
